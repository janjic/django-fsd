# Generated by Django 2.0.2 on 2018-02-06 15:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='name')),
                ('is_capital', models.BooleanField(default=False, verbose_name='is capital city')),
                ('population', models.BigIntegerField(verbose_name='population')),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('name', models.CharField(max_length=250, primary_key=True, serialize=False, verbose_name='name')),
                ('area', models.BigIntegerField(help_text='km&#178;', verbose_name='area')),
                ('population', models.BigIntegerField(verbose_name='population')),
                ('population_density', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='population density')),
                ('longest_river', models.CharField(blank=True, max_length=250, null=True, verbose_name='longest river')),
                ('biggest_mountain', models.CharField(blank=True, max_length=250, null=True, verbose_name='biggest mountain')),
                ('hemisphere', models.CharField(choices=[('NORTH', 'North'), ('SOUTH', 'South'), ('BOTH', 'Both')], max_length=5)),
                ('biggest_city', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.City', verbose_name='biggest city')),
            ],
            options={
                'verbose_name': 'continent',
                'verbose_name_plural': 'continents',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='code')),
                ('name', models.CharField(max_length=250, verbose_name='name')),
                ('independence_day', models.DateField(blank=True, null=True, verbose_name='independence day')),
                ('gay_friendly', models.NullBooleanField(verbose_name='gay friendly')),
                ('continent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='countries', to='polls.Continent', verbose_name='continent')),
            ],
            options={
                'verbose_name': 'country',
                'verbose_name_plural': 'countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ocean',
            fields=[
                ('name', models.CharField(max_length=250, primary_key=True, serialize=False, verbose_name='name')),
                ('area', models.BigIntegerField(verbose_name='area')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('map_url', models.URLField(verbose_name='map url')),
            ],
            options={
                'verbose_name': 'ocean',
                'verbose_name_plural': 'oceans',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='name')),
                ('area', models.BigIntegerField(help_text='km&#178;', verbose_name='area')),
                ('avg_depth', models.IntegerField(blank=True, help_text='meters', null=True, verbose_name='average depth')),
                ('max_depth', models.IntegerField(blank=True, help_text='meters', null=True, verbose_name='maximum depth')),
                ('basin_countries', models.ManyToManyField(blank=True, related_name='seas', to='polls.Country')),
                ('ocean', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Ocean', verbose_name='ocean')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.Sea', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'sea',
                'verbose_name_plural': 'seas',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='continent',
            name='largest_country',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='polls.Country', verbose_name='largest country'),
        ),
        migrations.AddField(
            model_name='continent',
            name='oceans',
            field=models.ManyToManyField(to='polls.Ocean', verbose_name='oceans'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='polls.Country', verbose_name='country'),
        ),
        migrations.AlterUniqueTogether(
            name='city',
            unique_together={('name', 'country')},
        ),
    ]
